<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" 
                      "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
                      
<chapter id="Introduction">
	<title>Introduction</title>

	<section>
		<title>Rappel de la problématique</title>
		
		<para>
			La taille des documents numériques ne cesse de croître. En effet depuis l'avènement du tout numérique, la croissance de la taille des données évolue de manière exponentielle. Bien souvent, ces données nécessitent de multiples traitements afin de les rendre disponibles sur l'éventail des supports actuellement à notre disposition. Or, il est courant que les données d'origines soient amenées à être modifiées, corrigées. Les traitements sont donc totalement ré-exécutés pour prendre en compte ces modifications. Afin de ne pas considérer les premières applications des traitements comme pure perte de temps, l'idée est de ré-utiliser les résultats précédents et de les mettre à jour de manière intelligente. Ceci est la problématique générale de ce projet et l'idée que nous souhaitons mettre en oeuvre. Regardons maintenant cette problématique dans le domaine d'application de ce projet, à savoir le génie documentaire.
		</para>
    </section>
		
		<section>
		  <title>Application au génie documentaire</title>
		  <para>
		    Les génie documentaire est un savoir faire qui s’intéresse aux principes, aux outils et aux processus permettant d’améliorer la capacité à créer, à gérer et à maintenir d’importants ensembles de documents. Comme nous le soulignions précédement, ce savoir faire se heurte à l'inexorable augmentation de la masse des données. De plus, avec l'internet et le multimédia, les supports de diffusion se sont multipliés. Ces faits conjugés contraignent les documents à subir de multiples traitements. 
		  </para>
		  <para>
		    Pour le moment, le paysage que nous avons dressé est plutôt sombre. Cependant, les différentes avancés que le génie documentaire a connu ces dernières années ont pour objectifs de gérer ces différents problèmes de taille et de multi-support. Le principal apport dans ce domaine vient du langage XML et de XSLT, son langage de transformation associé. Grâce à ces deux composants, il est possible de ne gérer qu'un seul document d'origine et de le transformer en autant de documents cibles prêt à être distribués.
		  </para>
		  <para>
		    Prenons un exemple d'utilisation de ces technologies. Dans la société Airbus France, la production de documentation pour les avions civils présente différentes spécificités avec notamment :
		   </para>
		    <itemizedlist>
		      <listitem>
		      <para>
		        de nombreux manuels différents. La documentation technique est décomposée en trois familles selon l’usage du manuel : la formation des équipages grâce à la documentation d’instruction, l’usage des avions grâce à la documentation opérationnelle, et l’entretien des appareils grâce à la documentation d’entretien ;
		      </para>
		      </listitem>
		      <listitem>
		      <para>
		      une documentation très volumineuse. Pour donner un exemple, un Airbus A320 est livré avec 39 manuels différents ce qui représente environ 800 000 pages et trois tonnes de papier ; 
		      </para>
		      </listitem>
		      <listitem>
		      <para>		      
		      une documentation personnalisée pour chaque avion livré. En effet, les avions A320 
délivrés à Air France sont différents de ceux délivrés à Air Canada. Deux 
documentations techniques distinctes doivent donc être produites. De plus, au sein 
d’une même compagnie aérienne, les avions de même type ne sont pas strictement 
identiques.
           </para>
           </listitem>
		    </itemizedlist>
		  <para>
		    On comprendra qu'étant donné le volume, il est interressant de ne gérer qu'une seule et même source afin de générer les documents de manière automatique en fonction de la cible. Mais un autre problème se pose alors, c'est le temps de traitement. En effet, si une modification doit intervenir pour correction ou autre raison, il est dommage de devoir ré-éxécuter la transformation dans sa totalité. Ainsi, une optimisation qui consisterais en une opération de mise en conformité du document déja généré avec le source modifié serait d'un grand confort.
		  </para>
		  <para>
		    Le cadre de notre travail est donc là : fournir un moteur de transformation XSLT incrémental, capable de transformer un document source XML en un document cible définit par l'utilisateur et de mettre en conformité ce document cible suite à une ou plusieurs modifications du document source. Cette opération de mise en conformité devra bien entendu être faite dans un soucis d'optimalité.
		  </para>
	</section>

  <section>
    <title>Organisation du rapport</title>
    <para>
      Ce rapport présente la phase de réalisation de ce projet. Il fera tout d'abord un rappel sur les technologies utilisées et qui n'ont pas été développées lors de la phase de bibliographie et conception afin que le reste du rapport soit plus aisément assimilable. Ensuite il présentera le travail réalisé et comment le projet a été intégré à l'outil de départ, c'est à dire 4Suite. Par la suite, nous montrerons comment les tests et la validation du projet ont été effectués et présenterons les résultats des tests de performance. Enfin, nous terminerons par la partie concernant la gestion de projet qui comprend le découpage des tâches ainsi que le planning de réalisation final avant de conclure et terminer ainsi ce rapport.
    </para>
  </section>

</chapter>
